<?xml version="1.0" encoding="utf-8"?>
<alsa>
  <client name="Midi Through">
    <port id="0" />
  </client>
  <client name="Midi Fighter Twister"> <!-- Dirty MFT Signal -->
    <port id="0">
      <connection client="mididings" port="0" />
    </port>
  </client>
  <client name="mio"> <!-- Octatrack. DIN world. -->
    <port id="0">
      <connection client="Midi Through" port="0" />
      <connection client="Pure Data" port="0" />
      <connection client="amsynth" port="0" />
    </port>
  </client>
  <client name="Pure Data">
    <!--
      Pure Data translates weird values from MIDI Fighter into useable values.
      Much of these weird values occur on channel 14, some (Program Change) occur on Channel 16.
    -->
    <port id="1">
      <connection client="amsynth" port="0" />
    </port>
  </client>
  <client name="mididings"> <!-- Clean MFT Signal -->
    <!--
      Mididings filters out all notes coming from MIDI Fighter Twister.
      We don't use it for notes. We use it for CCs.
    -->
    <port id="1">
      <connection client="Pure Data" port="0" />
      <connection client="amsynth" port="0" />
      <connection client="Midi Through" port="0" />
      <connection client="mio" port="0" />
    </port>
  </client>
  <client name="amsynth">
    <!--
      amSynth outputs values out to the MIDI Fighter on bank/program change
    -->
    <port id="1">
      <connection client="Midi Fighter Twister" port="0" />
    </port>
  </client>
</alsa>
<!-- Guitarix should do this itself...
<jack>
  <client name="amsynth">
    <port name="L out">
      <connection port="system:playback_1" />
    </port>
    <port name="R out">
      <connection port="system:playback_2" />
    </port>
    <port name="midi_out" />
  </client>
  <client name="system">
    <port name="capture_1">
      <connection port="gx_head_amp:in_0" />
    </port>
    <port name="midi_capture_1">
      <connection port="gx_head_amp:midi_in_1" />
    </port>
  </client>
  <client name="gx_head_amp">
    <port name="out_0">
      <connection port="gx_head_fx:in_0" />
    </port>
  </client>
  <client name="gx_head_fx">
    <port name="out_0">
      <connection port="system:playback_1" />
    </port>
    <port name="out_1">
      <connection port="system:playback_2" />
    </port>
  </client>
</jack>
-->
